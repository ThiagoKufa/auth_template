version: '3.8'

services:
  postgres:
    container_name: kufatech_postgres
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: kufatech_dev
      POSTGRES_MULTIPLE_DATABASES: kufatech_test
    ports:
      - "5000:5432"
    volumes:
      - ./scripts/init-multiple-dbs.sh:/docker-entrypoint-initdb.d/init-multiple-dbs.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - kufatech_network

  redis:
    container_name: kufatech_redis
    image: redis:7-alpine
    command: redis-server --requirepass ""
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - kufatech_network

  api:
    container_name: kufatech_api
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - APP_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=kufatech_dev
      - DB_SSL_MODE=disable
      - DB_MAX_OPEN_CONNS=25
      - DB_MAX_IDLE_CONNS=25
      - DB_CONN_MAX_LIFETIME=5
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - REDIS_POOL_SIZE=10
      - SERVER_PORT=:8087
      - JWT_ACCESS_SECRET=your_access_secret_here
      - JWT_REFRESH_SECRET=your_refresh_secret_here
      - JWT_ACCESS_TTL=15m
      - JWT_REFRESH_TTL=720h
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080
      - CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
      - CORS_ALLOWED_HEADERS=Accept,Authorization,Content-Type,X-CSRF-Token,X-Request-ID
      - CORS_EXPOSED_HEADERS=Link,X-Total-Count,X-Request-ID
      - CORS_ALLOW_CREDENTIALS=true
      - CORS_MAX_AGE=86400
    ports:
      - "8087:8087"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - kufatech_network
  
networks:
  kufatech_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: 